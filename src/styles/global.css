@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  color-scheme: light;
}

body {
  @apply bg-white text-police-dark font-['Microsoft_YaHei',sans-serif];
  background: radial-gradient(circle at 10% 20%, rgba(30, 64, 175, 0.08), transparent 55%),
    radial-gradient(circle at 90% 30%, rgba(59, 130, 246, 0.08), transparent 50%),
    radial-gradient(circle at 50% 90%, rgba(99, 102, 241, 0.08), transparent 55%),
    #f8fafc;
}

a {
  @apply text-police-blue transition-colors duration-200;
}

a:hover {
  @apply text-police-light;
}

.aurora-bg {
  position: absolute;
  inset: -40%;
  background: radial-gradient(circle at 15% 25%, rgba(79, 70, 229, 0.18), transparent 55%),
    radial-gradient(circle at 80% 20%, rgba(56, 189, 248, 0.15), transparent 55%),
    radial-gradient(circle at 40% 80%, rgba(236, 72, 153, 0.18), transparent 60%),
    radial-gradient(circle at 70% 65%, rgba(14, 165, 233, 0.14), transparent 60%);
  filter: blur(0);
  animation: aurora-shift 24s linear infinite;
  opacity: 0.45;
}

.glass-noise {
  position: absolute;
  inset: 0;
  background-image: url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" width="160" height="160" viewBox="0 0 160 160"%3E%3Cfilter id="n" x="0" y="0" width="100%25" height="100%25"%3E%3CfeTurbulence type="fractalNoise" baseFrequency="1.2" numOctaves="4" stitchTiles="stitch"/%3E%3C/filter%3E%3Crect width="100%25" height="100%25" filter="url(%23n)" opacity="0.12"/%3E%3C/svg%3E');
  mix-blend-mode: soft-light;
  pointer-events: none;
  opacity: 0.4;
}

.floating-orb {
  position: absolute;
  height: 420px;
  width: 420px;
  border-radius: 9999px;
  background: radial-gradient(circle, rgba(255, 255, 255, 0.75), rgba(148, 163, 184, 0.4) 55%, transparent 70%);
  box-shadow: inset 0 0 45px rgba(255, 255, 255, 0.45);
  animation: float-slow 22s ease-in-out infinite;
}

.floating-orb::after {
  content: '';
  position: absolute;
  inset: 15%;
  border-radius: inherit;
  background: radial-gradient(circle at 30% 30%, rgba(255, 255, 255, 0.7), transparent 60%);
}

.floating-orb.delay-2000 {
  animation-delay: 2s;
}

.floating-orb.delay-4000 {
  animation-delay: 4s;
}

.frosted-card {
  @apply border border-white/60 bg-white/70 backdrop-blur-2xl shadow-[0_20px_45px_rgba(15,23,42,0.08)];
}

.frosted-button {
  @apply border border-white/60 bg-white/70 backdrop-blur-xl shadow-sm transition;
}

.reveal-element {
  position: relative;
  opacity: 0;
  transform: translate3d(0, 60px, 0) scale(0.94) rotateX(8deg);
  filter: blur(16px);
  transition: opacity 0.9s cubic-bezier(0.22, 1, 0.36, 1), transform 1s cubic-bezier(0.19, 1, 0.22, 1),
    filter 0.9s cubic-bezier(0.22, 1, 0.36, 1);
  transform-origin: center top;
  will-change: transform, opacity;
  isolation: isolate;
}

.reveal-element::after {
  content: '';
  position: absolute;
  inset: -10%;
  z-index: -1;
  border-radius: inherit;
  background: radial-gradient(circle at 30% 20%, rgba(148, 163, 184, 0.28), transparent 55%),
    linear-gradient(120deg, rgba(59, 130, 246, 0.25), rgba(236, 72, 153, 0.12));
  opacity: 0;
  transform: translate3d(0, 35px, 0) scale(0.9);
  filter: blur(30px);
  transition: opacity 0.9s cubic-bezier(0.22, 1, 0.36, 1), transform 1s cubic-bezier(0.19, 1, 0.22, 1),
    filter 1s cubic-bezier(0.19, 1, 0.22, 1);
}

.reveal-visible {
  opacity: 1;
  transform: translate3d(0, 0, 0) scale(1) rotateX(0deg);
  filter: blur(0);
}

.reveal-visible::after {
  opacity: 1;
  transform: translate3d(0, 0, 0) scale(1.02);
  filter: blur(18px);
}

@media (prefers-reduced-motion: reduce) {
  .reveal-element,
  .reveal-element::after {
    transition-duration: 0.01ms !important;
    transition-delay: 0.01ms !important;
  }

  .reveal-element {
    opacity: 1;
    transform: none;
    filter: none;
  }

  .reveal-element::after {
    opacity: 0;
    transform: none;
    filter: none;
  }
}

@keyframes aurora-shift {
  0% {
    transform: rotate(0deg) scale(1);
  }
  50% {
    transform: rotate(15deg) scale(1.05);
  }
  100% {
    transform: rotate(0deg) scale(1);
  }
}

@keyframes float-slow {
  0%,
  100% {
    transform: translate3d(0, 0, 0) scale(1);
  }
  50% {
    transform: translate3d(0, -50px, 0) scale(1.07);
  }
}
